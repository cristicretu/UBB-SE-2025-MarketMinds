name: C# Code Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.cs"
      - "**/*.csproj"
      - ".github/workflows/csharp-code-analysis.yml"
  workflow_dispatch:
    inputs:
      ref:
        description: "The branch, tag or SHA to check out"
        required: false
        default: ""

jobs:
  analyze:
    name: StyleCop Analysis
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
          fetch-depth: 0

      - name: Remove conflicting .NET versions
        run: |
          # List all installed .NET versions
          echo "Currently installed .NET versions:"
          dotnet --list-sdks

          # Remove previous .NET installations from PATH
          echo "Removing .NET 7 from PATH if it exists"
          export PATH=$(echo $PATH | tr ":" "\n" | grep -v "dotnet" | tr "\n" ":")

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.200"

      - name: Create global.json to force .NET version
        run: |
          cat > global.json << 'EOF'
          {
            "sdk": {
              "version": "8.0.200",
              "rollForward": "latestMajor"
            }
          }
          EOF
          cat global.json

      - name: Verify .NET installation
        run: |
          dotnet --info
          dotnet --version
          echo "DOTNET_ROOT=$DOTNET_ROOT"
          # Make sure the right version is being used
          if [[ $(dotnet --version) != 8.* ]]; then
            echo "Wrong .NET version detected!"
            exit 1
          fi

      - name: Check existing project file packages
        run: |
          echo "Checking existing packages in project file:"
          grep -r "StyleCop.Analyzers" MarketMinds/ --include="*.csproj" || echo "No StyleCop packages found in csproj files"

      - name: Restore dependencies
        run: dotnet restore MarketMinds/MarketMinds.sln

      - name: Create Directory.Build.props with StyleCop config
        run: |
          cat > MarketMinds/Directory.Build.props << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <Project>
            <PropertyGroup>
              <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)/SE.ruleset</CodeAnalysisRuleSet>
              <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
              <WarningsAsErrors />
              <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
              <RunAnalyzers>true</RunAnalyzers>
              <AnalysisLevel>latest</AnalysisLevel>
              <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
            </PropertyGroup>
            
            <!-- No PackageReference for StyleCop.Analyzers here, using the one in the project file -->
          </Project>
          EOF
          cat MarketMinds/Directory.Build.props

      - name: Build with StyleCop analysis
        run: dotnet build MarketMinds/MarketMinds.sln --no-restore
        continue-on-error: true

      - name: Format StyleCop Results
        if: always()
        run: |
          echo "## C# Code Analysis Results" >> $GITHUB_STEP_SUMMARY
          if [ -f "$(find . -name "*.binlog" | head -n 1)" ]; then
            echo "StyleCop violations found. Please fix the issues before merging." >> $GITHUB_STEP_SUMMARY
            dotnet build MarketMinds/MarketMinds.sln --no-restore -v detailed | grep -E "warning|error" | tee -a $GITHUB_STEP_SUMMARY
          else
            echo "âœ… No StyleCop violations found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check for build errors
        if: always()
        run: |
          if [ -f "$(find . -name "*.binlog" | head -n 1)" ]; then
            echo "## Build Errors" >> $GITHUB_STEP_SUMMARY
            echo "Errors found during build. Please fix the issues before merging." >> $GITHUB_STEP_SUMMARY
            dotnet build-server shutdown
            dotnet build MarketMinds/MarketMinds.sln --no-restore -v diagnostic >> $GITHUB_STEP_SUMMARY
          fi

      - name: Report code analysis results as PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const stepSummary = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## StyleCop Analysis Results\n\n${stepSummary}`
            });
